# -*- coding: utf-8 -*-

def get_wl(sensor):
    if sensor == 0:  # ASD
        wl_sensor = range(350,2501)
        fwhm = [1.0] * 2151

    elif sensor == 1:  # Sentinel-2
        wl_sensor = [442.25, 492.22, 560.31, 663.09, 703.96, 742.38, 781.72, 833.33, 865.82, 942.25,
                     1373.67, 1609.43, 2193.89]

        fwhm = [18.00, 63.00, 34.00, 28.00, 14.00, 14.00, 18.00, 103.00, 22.00, 19.00,
                28.00, 87.00, 172.00]

    elif sensor == 2:  # EnMAP
        wl_sensor = [423.00, 429.00, 434.00, 440.00, 445.00, 450.00, 455.00, 460.00, 464.00, 469.00,
                     474.00, 479.00, 484.00, 488.00, 493.00, 498.00, 503.00, 508.00, 513.00, 518.00,
                     523.00, 528.00, 533.00, 538.00, 543.00, 548.00, 553.00, 559.00, 564.00, 569.00,
                     575.00, 580.00, 586.00, 592.00, 597.00, 603.00, 609.00, 615.00, 621.00, 627.00,
                     633.00, 639.00, 645.00, 652.00, 658.00, 665.00, 671.00, 678.00, 685.00, 691.00,
                     698.00, 705.00, 712.00, 719.00, 726.00, 733.00, 740.00, 748.00, 755.00, 762.00,
                     770.00, 777.00, 785.00, 793.00, 800.00, 808.00, 816.00, 823.00, 831.00, 839.00,
                     847.00, 855.00, 863.00, 871.00, 879.00, 887.00, 895.00, 903.00, 911.00, 920.00,
                     928.00, 936.00, 944.00, 952.00, 961.00, 969.00, 977.00, 985.00, 905.00, 914.00,
                     924.00, 934.00, 944.00, 954.00, 965.00, 975.00, 986.00, 996.00, 1007.00, 1018.00,
                     1029.00, 1040.00, 1051.00, 1063.00, 1074.00, 1085.00, 1097.00, 1109.00, 1120.00, 1132.00,
                     1144.00, 1155.00, 1167.00, 1179.00, 1191.00, 1203.00, 1215.00, 1227.00, 1239.00, 1251.00,
                     1263.00, 1275.00, 1287.00, 1299.00, 1311.00, 1323.00, 1335.00, 1347.00, 1359.00, 1370.00,
                     1382.00, 1394.00, 1406.00, 1418.00, 1430.00, 1441.00, 1453.00, 1465.00, 1476.00, 1488.00,
                     1499.00, 1511.00, 1522.00, 1534.00, 1545.00, 1556.00, 1568.00, 1579.00, 1590.00, 1601.00,
                     1612.00, 1623.00, 1634.00, 1645.00, 1656.00, 1667.00, 1678.00, 1689.00, 1699.00, 1710.00,
                     1721.00, 1731.00, 1742.00, 1752.00, 1762.00, 1773.00, 1783.00, 1793.00, 1804.00, 1814.00,
                     1824.00, 1834.00, 1844.00, 1854.00, 1864.00, 1874.00, 1884.00, 1893.00, 1903.00, 1913.00,
                     1922.00, 1932.00, 1942.00, 1951.00, 1961.00, 1970.00, 1979.00, 1989.00, 1998.00, 2007.00,
                     2016.00, 2026.00, 2035.00, 2044.00, 2053.00, 2062.00, 2071.00, 2080.00, 2089.00, 2098.00,
                     2106.00, 2115.00, 2124.00, 2133.00, 2141.00, 2150.00, 2159.00, 2167.00, 2176.00, 2184.00,
                     2193.00, 2201.00, 2209.00, 2218.00, 2226.00, 2234.00, 2243.00, 2251.00, 2259.00, 2267.00,
                     2275.00, 2283.00, 2291.00, 2299.00, 2307.00, 2315.00, 2323.00, 2331.00, 2339.00, 2347.00,
                     2355.00, 2363.00, 2370.00, 2378.00, 2386.00, 2393.00, 2401.00, 2409.00, 2416.00, 2424.00,
                     2431.00, 2439.00]

        fwhm = [6.00, 6.00, 6.00, 6.00, 6.00, 4.00, 4.00, 4.00, 4.00, 4.00,
            4.00, 4.00, 4.00, 4.00, 4.00, 4.00, 4.00, 4.00, 4.00, 4.00,
            6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00,
            6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00,
            6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 8.00, 8.00, 8.00,
            8.00, 8.00, 8.00, 8.00, 8.00, 8.00, 8.00, 8.00, 8.00, 8.00,
            8.00, 8.00, 8.00, 8.00, 8.00, 8.00, 8.00, 8.00, 8.00, 8.00,
            8.00, 8.00, 8.00, 8.00, 8.00, 8.00, 8.00, 8.00, 8.00, 8.00,
            8.00, 8.00, 8.00, 8.00, 8.00, 8.00, 8.00, 8.00, 10.00, 10.00,
            10.00, 12.00, 12.00, 12.00, 12.00, 12.00, 12.00, 12.00, 12.00, 12.00,
            12.00, 12.00, 12.00, 12.00, 12.00, 12.00, 12.00, 12.00, 14.00, 14.00,
            14.00, 14.00, 14.00, 14.00, 14.00, 14.00, 14.00, 14.00, 14.00, 14.00,
            14.00, 14.00, 14.00, 14.00, 14.00, 14.00, 14.00, 14.00, 14.00, 14.00,
            14.00, 14.00, 14.00, 14.00, 14.00, 14.00, 12.00, 12.00, 12.00, 12.00,
            12.00, 12.00, 12.00, 12.00, 12.00, 12.00, 12.00, 12.00, 12.00, 12.00,
            12.00, 12.00, 12.00, 12.00, 12.00, 12.00, 12.00, 12.00, 12.00, 12.00,
            12.00, 12.00, 12.00, 12.00, 12.00, 12.00, 12.00, 12.00, 12.00, 12.00,
            12.00, 12.00, 10.00, 10.00, 10.00, 10.00, 10.00, 10.00, 10.00, 10.00,
            10.00, 10.00, 10.00, 10.00, 10.00, 10.00, 10.00, 10.00, 10.00, 10.00,
            10.00, 10.00, 10.00, 10.00, 10.00, 10.00, 10.00, 10.00, 10.00, 10.00,
            10.00, 10.00, 10.00, 10.00, 10.00, 10.00, 10.00, 10.00, 10.00, 10.00,
            10.00, 10.00, 10.00, 8.00, 8.00, 8.00, 8.00, 8.00, 8.00, 8.00,
            8.00, 8.00, 8.00, 8.00, 8.00, 8.00, 8.00, 8.00, 8.00, 8.00,
            8.00, 8.00, 8.00, 8.00, 8.00, 8.00, 8.00, 8.00, 8.00, 8.00,
            8.00, 8.00]

    elif sensor == 3:  # Landsat
        wl_sensor = [442.96, 482.04, 561.41, 654.59, 864.67, 1373.43, 1608.86, 2200.73]
        fwhm = [16.00, 60.00, 57.00, 37.00, 28.00, 20.00, 85.00, 187.00]

    elif sensor == 4:  # Hymap
        wl_sensor = [438.00000, 450.00000, 462.40000, 478.10000, 493.40000,
                      508.50000, 524.10000, 539.40000, 554.90000, 570.20000, 585.20000,
                      600.20000, 616.30000, 631.70000, 646.50000, 661.60000, 677.10000,
                      692.40000, 707.50000, 722.90000, 738.10000, 753.00000, 768.00000,
                      783.10000, 798.30000, 813.40000, 828.50000, 843.90000, 859.20000,
                      874.30000, 878.20000, 895.40000, 911.10000, 926.90000, 943.30000,
                      959.10000, 974.60000, 990.40000, 1006.4000, 1021.7000, 1037.2000,
                      1052.7000, 1067.9000, 1082.9000, 1098.0000, 1112.9000, 1127.8000,
                      1142.4000, 1157.1000, 1171.6000, 1186.0000, 1200.4000, 1214.8000,
                      1229.0000, 1243.1000, 1257.4000, 1271.6000, 1285.5000, 1299.2000,
                      1313.3000, 1327.3000, 1340.5000, 1404.2000, 1418.8000, 1433.0000,
                      1447.1000, 1460.9000, 1475.2000, 1489.0000, 1502.6000, 1516.3000,
                      1529.9000, 1543.3000, 1556.6000, 1570.0000, 1583.2000, 1596.1000,
                      1609.1000, 1622.2000, 1635.1000, 1647.8000, 1660.6000, 1673.2000,
                      1685.7000, 1698.0000, 1710.4000, 1722.8000, 1735.1000, 1747.1000,
                      1759.4000, 1771.5000, 1783.4000, 1795.1000, 1807.0000, 1951.1000,
                      1970.3000, 1989.5000, 2008.5000, 2027.0000, 2045.3000, 2063.7000,
                      2082.1000, 2100.4000, 2118.5000, 2136.2000, 2153.5000, 2170.8000,
                      2187.9000, 2205.8000, 2224.0000, 2240.8000, 2258.0000, 2274.5000,
                      2291.6000, 2308.8000, 2325.0000, 2341.3000, 2357.4000, 2373.2000,
                      2389.2000, 2405.3000, 2421.5000, 2437.1000, 2452.6000, 2467.8000,
                      2483.0000]

        fwhm = [11.0, 11.4, 16.0, 15.5, 16.5, 15.7, 15.6, 16.3, 16.0, 15.4, 15.0, 15.8, 16.1, 15.4,
                 15.3, 15.8, 16.0, 15.7, 15.9, 16.4, 16.0, 15.9, 16.1, 16.6, 16.6, 16.5, 16.9, 17.2,
                 16.9, 17.4, 16.3, 16.0, 15.7, 16.0, 16.2, 15.6, 15.8, 16.3, 15.3, 15.4, 15.8, 15.8,
                 15.3, 15.1, 15.7, 14.8, 14.6, 14.9, 15.2, 15.0, 14.7, 15.1, 14.8, 14.6, 14.9, 15.3,
                 14.8, 14.7, 14.9, 15.4, 14.7, 13.9, 16.2, 15.7, 14.9, 14.7, 14.9, 14.7, 14.4, 14.3,
                 14.6, 14.4, 14.2, 14.3, 14.2, 14.0, 13.8, 14.1, 14.0, 13.6, 13.5, 13.8, 13.5, 13.2,
                 13.1, 13.4, 13.0, 12.8, 12.7, 12.9, 12.5, 12.4, 12.0, 12.1, 21.2, 21.5, 21.4, 20.8,
                 20.5, 20.4, 20.6, 21.0, 20.6, 20.3, 19.8, 19.8, 19.8, 19.9, 21.4, 19.4, 19.4, 19.2,
                 19.1, 19.5, 19.2, 19.1, 18.5, 18.3, 18.2, 18.8, 18.9, 18.4, 18.0, 17.8, 18.2, 17.9]

    else:
        wl_sensor, fwhm = None, None

    return wl_sensor, fwhm

def get_ndvi_wl(sensor):
    red = {0: 326,
           1: 3,
           2: 47,
           3: 3,
           4: 16}
    nir = {0: 486,
           1: 7,
           2: 69,
           3: 4,
           4: 27}
    return red[sensor], nir[sensor]